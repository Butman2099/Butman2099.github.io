{"title":"Лабораторна робота № 14","markdown":{"yaml":{"title":"Лабораторна робота № 14"},"headingText":"Теоретичні відомості","containsRefs":false,"markdown":"\n\n\n\n\n\n\n**Тема.** Графодинамічний аналіз часових рядів\n\n**Мета.** Навчитися використовувати елементи теорії графів для отримання спектральних і топологічних мір складності систем, що характеризуються часовими рядами\n\n\nУ попередній роботі ми ввели поняття мір складності для найпростіших графів та поширених мережних моделей, порівняли деякі з мір складності. У даній роботі ми продемонструємо сучасні методи перетворення часових рядів у мережу (граф) з подальшим дослідженням відповідних спектральних і топологічних мір складності. Ми також покажемо, що вказані міри можна співставляти з динамікою вихідного часового ряду (звідси **графодинаміка**) і якщо вони є інформативними щодо можливих змін власне ряду, то їх можливо використовувати для побудови індикаторів характерної динаміки складних систем.\n\nБільшість складних систем інформують про свою структурну та динамічну природу, генеруючи послідовність певних характеристик, що можна представити часовими рядами. Останніми роками розроблено цікаві алгоритми перетворення часових рядів у мережу, що дозволяє розширити діапазон відомих характеристик часових рядів навіть до мережних. Останнім часом було запропоновано декілька підходів до перетворення часових послідовностей у складні мережеподібні відображення. Ці методи можна умовно розділити на три класи [@DONNER2011]. Перший базується на вивченні \"видимості\" послідовних значень часового ряду і називається графом видимості (Visibility Graph, VG) [@DONNER2011;@vg_lacasa].\n\nДругий аналізує взаємне наближення різних відрізків часової послідовності і використовує техніку рекурентного аналізу [@DONNER2011] (див. лабораторні 2-3). Рекурентна діаграма відображає існуючу повторюваність фазових траєкторій у вигляді бінарної матриці, елементами якої є одиниці або нулі, залежно від того, чи є близькими (рекурентними) із заданою точністю чи ні обрані точки фазового простору динамічної системи. Рекурентна діаграма легко трансформується в матрицю суміжності, за якою розраховуються спектральні та топологічні характеристики графа [@review_econophys].\n\nНарешті, якщо в основу формування зв'язків елементів графа покласти кореляційні відношення між ними, то отримаємо кореляційний граф [@DONNER2011]. Для побудови та аналізу властивостей кореляційного графа необхідно сформувати з кореляційної матриці матрицю суміжності. Для цього необхідно ввести величину, яка для кореляційного поля буде слугувати відстанню між корельованими агентами. Така відстань може бути представлена як $d_{ij}=\\sqrt{2(1-C_{ij})}$, де $C_{ij}$ --- це коефіцієнт кореляції між двома активами. Так, якщо коефіцієнт кореляції між двома активами значний, то відстань між ними невелика, і, починаючи з певного критичного значення $d_{cr}$, активи можна вважати зв'язаними на графі. Для матриці суміжності це означає, що вони є суміжними на графі. В іншому випадку активи не є суміжними. У цьому випадку умова зв'язності графа є обов'язковою умовою.\n\nОсновною метою таких методів є точне відтворення інформації, що зберігається в часових рядах, в альтернативній математичній структурі, щоб згодом можна було використовувати потужні інструменти теорії графів для характеристики часових рядів з іншої точки зору з метою подолання розриву між нелінійним аналізом часових рядів, динамічних систем і теорією графів.\n\nУ даній роботі розглянемо лише алгоритм графа видимості (див. опис у лаб. 11).\n\n### Пакет `ts2vg`\n\nДля подальшої побудови класичного VG або його горизонтального аналогу, ми будемо використовувати бібліотеку [`ts2vg`](https://cbergillos.com/ts2vg/index.html#id3). Пакет `ts2vg` надає високопродуктивну реалізацію алгоритму для побудови графів видимості з даних часових рядів, вперше представленого Лукасом Лакасою та ін. у 2008 році [@vg_lacasa].\n\nГрафи видимості та деякі з їхніх властивостей (наприклад, степеневі розподіли) обчислюються швидко та ефективно навіть для часових рядів з мільйонами спостережень. Для обчислення графів використовується ефективний алгоритм \"розділяй і володарюй\", коли це можливо [@10.1063/1.4927835].\n\n#### Встановлення\n\nОстання випущена версія `ts2vg` доступна на [PyPI](https://pypi.org/project/ts2vg) і може бути легко встановлена шляхом запуску наступної команди:\n\n#### Підтримувані типи графів\n\n##### Основні типи\n\n1. Класичний граф видимості [@vg_lacasa] (`ts2vg.NaturalVG`).\n2. Горизонтальний граф видимості [@PhysRevE.80.046103] (`ts2vg.HorizontalVG`).\n\n##### Доступні варіації\n\n1. Зважений граф видимості (через параметр `weighted`).\n2. Направлений граф видимості (через параметр `directed`).\n3. Параметричний граф видимості [@BEZSUDNOV201453] (через параметри `min_weight` та `max_weight`).\n4. Граф обмеженої проникної видимості [@2012-3-030506;@10.1063/5.0048243] (через параметр `penetrable_limit`).\n\nЗверніть увагу, що кілька варіантів графів можна комбінувати і використовувати одночасно. Із більш детальною документацією можна ознайомитись на сайті бібліотеки [`ts2vg`](https://carlosbergillos.github.io/ts2vg/). \n\n##### Сумісність з іншими бібліотеками\n\nОтримані графи можуть бути легко перетворені в графові об'єкти з інших поширених графових бібліотек Python, таких як `igraph`, `NetworkX` та `SNAP` для подальшого аналізу.\n\nДля цього передбачені наступні методи:\n\n- `as_igraph()`;\n- `as_network()`;\n- `as_snap()`.\n\n## Хід роботи\n\nСпочатку імпортуємо необхідні модулі для подальшої роботи:\n\nІ виконаємо налаштування рисунків для виведення:\n\nРозглянемо можливість використання графодинамічних показників у якості індикаторів або індикаторів-передвісників кризових явищ. Для прикладу завантажимо часовий ряд криптовалютного індексу Біткоїна за весь часовий період, що надається веб-ресурсом `yfinance`:\n\n::: {.callout-warning}\n## Увага\n\nВиконайте цей блок, якщо хочете зчитати дані не з Yahoo! Finance, а із власного файлу. Зрозуміло, що й аналіз результатів, і висновки залежать від того, з яким рядом ми працюємо \n\n:::\n\n---\n\n---\n\nВиведемо досліджуваний ряд:\n\nЯк і до цього, визначимо функцію для перетворення ряду (його стандартизації або знаходження прибутковостей). Для цього оголосимо функцію `transformation()`, що прийматиме на вхід часовий сигнал, тип ряду, і повертатиме його перетворення. Як показували попередні дослідження авторів, вихідне представлення часового ряду надає найбільш інформативне представлення для побудови графа. Тим не менш, ми допускаємо, що, наприклад, прибутковості фізичного сигналу можуть мати краще графове представлення, тому і визначаємо цю функцію в даній роботі. \n\nПовертаємо той самий вихідний сигнал. \n\nДалі задаємо параметри досліджуваного графа. Для подальших розрахунків ми будемо використовувати одні й ті ж самі значення часового вікна, кроку й типу ряду. \n\n### Побудова графа\n\nОскільки побудова графа для всього часового ряду може зайняти досить великий проміжок часу, ми будемо будувати граф видимості лише для його фрагменту. Для цього визначимо параметри `index_begin` та `index_end`, які будуть вказувати на початок відліку побудови та кінець. Для класичного графа видимості маємо: \n\nЯк ми можемо бачити з представленого рисунку, три послідовних зростання та спадання ціни BTC у 2021-2022 роках характеризуються доволі високим ступенем видимості в передкризовий період. Також дані піки утворюють орієнтовно 3 кластери із високою ступеневою центральністю. Крахові події на криптовалютному ринку можна розглядати як графи переважного приєднання, де, можливо, ключову роль у цих підйомах та спадах можуть відігравати один або декілька \"китів\" ринку, котрі чинять найбільший вплив на ринок і спрямовують вектор уваги всіх трейдерів у тому чи іншому напрямі.  \n\n### Віконна процедура\n\nДалі будемо спостерігати за тим, як змінюються властивості мережі з плином часу. Для цього використаємо добре знайому нам процедуру рухомого вікна. У рамках цієї процедури дослідимо графодинаміку як спектральних, так і топологічних показників. \n\nДля побудови парної динаміки конкретного індикатора та досліджуваного ряду визначимо функцію `plot_pair`:\n\n#### Спектральні характеристики\n\nСпектральна теорія графів базується на вивченні властивостей графів через власні значення або власні вектори матриці суміжності $A$ або матриці Лапласа $L$ [@Chung:1997].\n\nНагадаємо, що стандартна матриця Лапласа для графа $G$ визначається як\n\n$$\nL = D - A, \n$$ {#eq-14-3}\n\n$D$ --- діагональна матриця $G$, де $i$-ий діагональний елемент є ступенем вершини $i$ в $G$ [@spec_graph_theory], а $A$ --- матриця суміжності $G$. У цій роботі ми представляємо спектральні характеристики для нормованої матриці Лапласа [@norm_lapl], яка визначається як\n\n$$\n\\hat{L} = D^{-1/2}LD^{-1/2}. \n$$ {#eq-14-4}\n\nЯкщо $\\lambda$ --- власне значення $\\hat{L}$, тоді $\\lambda \\in [0, 2]$ [@Chung:1997]; тобто, нормалізуючи матрицю Лапласа, ми нормалізуємо власні значення. \n\nЗберігаємо абсолютні значення у текстовому документі. Також готуємо мітки для рисунків та назви збережених мір:\n\n##### Алгебраїчна зв'язність\n\nЩодо власних значень матриці Лапласа, однією з основних характеристик, яку ми можемо отримати, є **алгебраїчна зв'язність** $\\lambda_2$ графа, яка відповідає другому найменшому власному значенню матриці. Цей показник відображає кількість роз'єднаних компонент. Для незв'язного графа $\\lambda_2$ буде дорівнювати нулю, а для графа з вищою щільністю зв'язків $\\lambda_2$ буде більшим. Використовуючи цей показник, можливо визначити відмовостійкість і синхронізованість досліджуваної системи.\n\nНа [@fig-alg-con] видно, що $\\lambda_2$ зростає в передкризові періоди часу, що говорить про зростання ступеня синхронізованності між трейдерами ринку в дані періоди часу. Мережа крипторинку набуває все більшої корельованості та стійкості. Подібна динаміка може вказувати на зростання узгодженності між великими гравцями ринку щодо своїх подальших дій на Біткоїні. \n\n##### Енергія графа\n\nЗ власних значень матриці суміжності $A$ з $G$ можна визначити таку міру, як **енергія графа** $E(G)$ [@PhysRevE.85.016117;@gutman1978energy]:\n\n$$\nE = E(G) = \\sum_{i=1}^{N}\\left| \\lambda_i \\right|.\n$$ {#eq-14-5}\n\nПодібно до $\\lambda_2$, ми маємо повністю роз'єднаний граф, коли $E(G)=0$. Для кожного $\\lambda_i > 0$ існує багато ребер $e_{ij}$, які визначають високу та ефективну зв'язність $G$.\n\n[@fig-alg-energy] демонструє, що в періоди відносної стабільності $E$ залишається на досить низькому рівні, що вказує на роз'єднаність трейдерів ринку в подібні періоди. Як покупці, так і продавці діють досить некорельовано. У передкризові періоди енергія починає зростати, що вказує на зростання ефективності роботи між гравцями ринку та їх зв'язності. \n\n##### Cпектральний радіус\n\nКрім наведених вище мір, можна визначити такі міри, як **спектральний радіус**, яка є найбільшим абсолютним власним значенням матриці $A$:\n\n$$\nR = R(G) = \\max_{1\\leq i \\leq N}\\left| \\lambda_i \\right|. \n$$ {#eq-14-6}\n\n\nНа даному рисунку ([@fig-alg-rad]) видно, що спектральний радіус зростає в кризові й передкризові періоди, що вказує на зростання корельованості графа Біткоїна та синхронізованості дій трейдерів.\n\n##### Cпектральний розрив\n\nПроранжувавши власні значення матриці суміжності $G$ у неспадаючому порядку, тобто $\\lambda_1 \\leq \\lambda_2 \\leq ... \\leq \\lambda_n$, ми можемо визначити таку міру, як **спектральний розрив**:\n\n$$\n\\delta = \\delta(G) = \\lambda_{n} - \\lambda_{n-1}\n$$ {#eq-14-7}\n\nдля якого $\\lambda_n$ --- перше найбільше власне значення $\\hat{L}$, а $\\lambda_{n-1}$ друге найбільше власне значення. Спектральний розрив показує швидкість синхронізації в досліджуваній мережі. Чим він більший, тим більш взаємопов'язаними є вершини і тим складнішим є граф.\n\n[@fig-alg-gap] демонструє, що спектральний розрив також є показником синхронізованності ринку в передкризові період. Однак, із динаміки даного показника можна сказати, що в моменти криз найбільшу кількість інформації починає нести найбільше власне значення матриці Лапласа. Можна припустити, що друге і третє також можуть слугувати в якості індикаторів крахових подій, але найбільше власне значення в даному випадку представляється найкращим рішенням. \n\n##### Cпектральний момент\n\nСпектральною мірою складності, яку ми також хотіли б представити є **$k$-й спектральний момент**. Для невід'ємного цілого числа $k$, $k$-ий спектральний момент визначається як\n\n$$\nm_k = m_k(G) = \\sum_{i=1}^{N}\\lambda_{i}^{k}, \n$$ {#eq-14-8}\n\nде $m_k$ дорівнює кількості замкнутих обходів довжини $k$ [@cvetkovic1980spectra]. Кількість замкнутих обходів є важливим показником для вимірювання складності системи. Як було показано в роботі Ву та ін. [@5740372], використовуючи кількість замкнутих обходів всієї довжини, ми можемо виміряти складність графа та надлишковість альтернативних найкоротших шляхів. Отже, більші значення $m_k$ відповідають більшій складності мережі. Для подальших обчислень ми обрали $k=3$.\n\nЗ динаміки $m^3$ видно, що найбільш суттєвим ступенем синхронізованності характеризувалась предкризова динаміка 2018, середини 2019 і 2021 років. У ці періоди часу ми мали найбільшу кількість досить високих власних значень матриці Лапласа, а одже й достатньо високий ступінь синхронізації ринку в зазначені періоди. \n\n##### Cпектральна природна зв'язність\n\nЮнь та ін. [@Wu_Jun_2010] запропонували вимірювати \"середнє власне значення\" спектра суміжності графа $G$. Було запропоновано називати цей показник **природною зв'язністю** або **природним власним значенням**:\n\n$$\nN_c = N_c(G) = \\ln{\\left( \\frac{1}{N}\\sum_{i=1}^{N}\\exp{\\lambda_i} \\right)}.\n$$ {#eq-14-9}\n\nЕстрада [@E_Estrada_2006], Ву та ін. [@5740372] показали, що ([-@eq-14-9]) є чутливою та надійною мірою стійкості мережі.\n\nНа [@fig-alg-conn] видно, що показник природної зв'язності зростає у передкризові періоди часу. Тобто, даний показник можна використовувати в якості індикатора або індикатора-передвісника крахових подій на ринку Біткоїна. Особливо характерним є зростання ступеня синхронізованності ринку напередодні 2018 року, що може вказувати на початкові стадії зміцнення стійкості криптовалютної мережі. Досить високий ступінь синхронізованності ринку можна спостерігати напередодні середини 2019 та початку 2021 років. \n\n#### Топологічні міри центральності\n\nІснує багато способів кількісно оцінити важливість вершини або ребра з точки зору певного мережного атрибуту, відображаючи таким чином **топологію** складної мережі.\n\nЗберігаємо абсолютні значення у текстовому документі. Також готуємо мітки для рисунків та назви збережених:\n\n##### Максимальний ступінь вершини\n\n**Ступінь вершини** або **ступенева центральність** є концептуально найпростішою метрикою для опису характеристик зв'язку однієї вершини в складній мережі. Вона може бути представлена у вигляді\n\n$$\nd_i = \\sum_{j=1}^{N}A_{ij},\n$$ {#eq-14-10}\n\nде $d_i$ підраховує кількість $j$-их ребер, що інцидентні вершині $i$. \n\nОкрім ступеня конкретної вершини, ми можемо визначити вершину з найбільшою кількістю інцидентних ребер. Кількість таких вершин можемо позначити як $D_{max}$: \n\n$$\nD_{max} = \\max_{i=1,...,N}d_i.\n$$ {#eq-14-11}\n\nНа даному рисунку ([@fig-deg]) видно, що максимальний ступінь вершини починає зростати в кризові та передкризові періоди, що вказує на зростання центральності одного або декількох вузлів. Можна припустити, що один або декілька трейдерів ринку починають концентрувати на собі увагу всіх інших діячів дотичних до ринку Біткоїна. \n\n##### Середній ступінь впливовості\n\nСтупінь впливовості обчислює оцінку важливості вузла шляхом додавання впливовостей його сусідів. Впливовість для вузла $i$ --- це $i$-й елемент власного вектора $x$, пов'язаний з власним значенням $\\lambda$ максимального модуля, який є додатним. Такий власний вектор $x$ визначається з точністю до мультиплікативної константи рівнянням\n\n$$\n\\lambda x^{T} = x^{T}A,\n$$ {#eq-14-12}\n\nде $A$ --- матриця суміжності графа $G$. Наведене вище рівняння еквівалентне наступному:\n\n$$\n\\lambda x_i = \\sum_{j \\to i}x_j.\n$$ {#eq-14-13}\n\nТобто, додавання ступенів впливовості попередників вершини $i$ дає ступінь впливовості $i$, помножену на $\\lambda$. У випадку неорієнтованих графів $x$ також розв'язує знайоме рівняння $Ax =\\lambda x$.\n\nЗа теоремою Перрона-Фробеніуса [@doi:10.1137/1.9781611971262], якщо $G$ сильно зв'язний, то існує єдиний власний вектор $x$, і всі його елементи строго додатні.\n\nЯкщо $G$ не є сильно зв'язним, то може існувати декілька лівих власних векторів, пов'язаних з $\\lambda$, причому деякі з їх елементів можуть дорівнювати нулю.\n\n::: {.callout-note}\n## Примітка\n\nСтупінь впливовості або центральність за власним вектором було введено Ландау [@Schoenberg1969] для шахових турнірів. Пізніше його знову відкрив Вей [@wei1952algebraic], а потім популяризував Кендалл [@760e07d1-fd0d-3ce0-afae-f7ab9cd57766] в контексті спортивного рейтингу. Берге ввів загальне визначення для графів, заснованих на соціальних зв'язках [@berge1958]. Бонаcіч [@35397813-90c1-3806-8d5d-a07b3340ac3d] знову ввів центральність власного вектора і зробив її популярною в аналізі зв'язків.\n\nЦя функція обчислює лівий домінуючий власний вектор, що відповідає додаванню впливовості попередників: це звичайний підхід. Щоб додати центральність наступників, спочатку переверніть граф за допомогою `G.reverse()`.\n\nЦя реалізація використовує [SciPy sparse eigenvalue solver](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.linalg.eigs.html#scipy.sparse.linalg.eigs) (ARPACK) для пошуку найбільшої пари власне значення/власний вектор за допомогою ітерацій Арнольді [@wikipediaArnoldiIteration]\n\n:::\n\nСередній ступінь впливовості характеризується зростанням у передкризові періоди, як правило, спадом під час криз. Подібно до спектральних показників, середній ступінь впливовсті вказує на зростання одного або декількох власних значень матриці суміжності графа та значущості власних векторів центральних вузлів торгівельного графа Біткоїна. \n\n##### Середній ступінь близькості\n\nУ мережі відстань $l_{ij}$ між вузлом $i$ та вузлом $j$ позначає кількість ребер, які з'єднують найкоротший шлях між цими двома вузлами. Спираючись на поняття довжини найкоротшого шляху між двома вузлами, ми можемо надати різні міри, які характеризують зв'язність всієї мережі. Однією з таких мір є центральність або середній ступінь близькості зв'язку між вершиною $i$ та всіма іншими вершинами\n\n$$\nc_i = (N-1)\\Bigg/\\left( \\sum_{j=1}^{N}l_{ij} \\right), \n$$ {#eq-14-14}\n\nщо надають зворотнє середнє по всім найкоротшим шляхам від $i$ до всіх вузлів $j$. \n\nСереднє арифметичне значення ступеня близькості для кожного $i$-го вузла дає нам **глобальний (середній) ступінь близькості**:\n\n$$\nC = \\frac{1}{N}\\sum_{i=1}^{N}c_i. \n$$ {#eq-14-15}\n\n\nЯк можна бачити з представленого рисунку ([@fig-clos]), глобальний ступінь близькості зростає в кризові та передкризові періоди, що вказує на спад довжини найкоротших шляхів у графі видимості криптовалютного ринку. Даний показник зростав напередодні останніх чотирьох років. Це вказує на те, що передодні досліджуваних торгівельних років між трейдерами зростав ступінь синхронізованності їх дій. \n\n##### Середній ступінь інформаційності\n\nДля визначення центральності будь-якого вузла $i$ пропонується спочатку визначити його інформаційну зв'язність з іншими вузлами, тобто $\\left\\{I_{ij} | j=1,..., N \\right\\}$. Середнє гармонійне значення інформації щодо шляху від вузла $i$ до інших вузлів буде використовуватися для визначення **ступеня інформаційності** вузла $i$. Зокрема, якщо $I_i$ пов'язано з центральністю або інформаційністю вузла $i$, то\n\n$$\n\\hat{I_i} = \\left( \\frac{1}{N}\\sum_{j=1}^{N}\\frac{1}{I_{ij}} \\right)^{-1}.\n$$ {#eq-14-16}\n\nЗгідно зі Стівенсоном та Зеленом [@STEPHENSON19891], ступінь інформаційності можна обчислити шляхом інвертування простої матриці. Перш за все, ми визначаємо $N \\times N$ матрицю $B=\\left\\{{b_{ij}} \\right\\}$, де\n\n$$\nb_{ij} = \\begin{cases}\n        0 & \\text{якщо} \\,\\, i \\,\\, та \\,\\, j \\,\\, суміжні,\\\\\n        1 & \\text{інакше},\n    \\end{cases}\n$$ {#eq-14-17}\n\nі $b_{ii}=1+d_i$, де $d_i$ ступінь вершини $i$. \n\nДалі, визначивши матрицю $C = \\left\\{ c_{ij} \\right\\} = B^{-1}$, ми можемо розрахувати $I_{ij}$ згідно рівняння\n\n$$\nI_{ij} = (c_{ii} + c_{jj} - 2c_{ij})^{-1}.\n$$ {#eq-14-18}\n\nЕлемент $\\sum_{j=1}^{N} 1/I_{ij}$ у рівнянні ([-@eq-14-16]) можна переписати наступним чином: \n\n$$\n\\sum_{j=1}^{N}c_{ii} + c_{jj} - 2c_{ij} = Nc_{ii} + T - 2R, \n$$ {#eq-14-19}\n\nде $T = \\sum_{j=1}^{N}c_{jj}$ і $R = \\sum_{j=1}^{N}c_{ij}$. \n\nОтже, ступінь інформаційності вузла $i$ може бути представлений як \n\n$$\nI_i = \\left[ (Nc_{ii} + T - 2R)/N \\right]^{-1} = \\left[ c_{ii} + (T-2R)/N \\right]^{-1}.\n$$ {#eq-14-20}\n\nСхожим чином, для вимірювання глобального ступеня інформаційності ми розглядаємо середнє арифметичне локального ступеня інформаційності:\n\n$$\n\\hat{I} = \\frac{1}{N}\\sum_{i=1}^{N}I_i.\n$$ {#eq-14-21}\n\nНа ([@fig-inf]) видно, що глобальний ступінь інформаційності зростає в передкризові періоди, що є індикатором зростання ефективності передачі інформації між трейдерами ринку та зростання детермінованності динаміки ринку. \n\n##### Максимальний ступінь посередництва\n\nІншою часто досліджуваною характеристикою вершин на основі шляхів є **ступінь посередництва**, яка вимірює частку всіх найкоротших шляхів у мережі, що проходять від $i$ до $j$ через вершину $k$. Для загальної кількості найкоротших шляхів між вершинами $i$ та $j$, позначених як $\\sigma(i,j)$, і найкоротших шляхів, що проходять через дану вершину $k(\\sigma(i, j | k))$, ступінь посередництва можна визначити як\n\n$$\nb_k = \\sum_{i,j=1; i,j \\neq k}^{N} \\sigma(i, j | k) / \\sigma(i, j). \n$$ {#eq-14-22}\n\nЩоб віднайти найбільшу кількість інформації, що проходить через конкретний $k$-й, ми вимірюємо максимальний ступінь посередництва, розглядаючи кожен $k$-ий вузол:\n\n$$\nB = \\max_{i=1,...,N}b_{i}.\n$$ {#eq-14-23}\n\nЯк можна бачити, показник максимального ступеня посередництва спадає в передкризові періоди, що вказує на спад кількості посередників через яких може проходити інформація стосовно подальної динаміки Біткоїна. Це говорить про те, що на ринку зв'являються один або декілька трейдерів на котрих концентрується увага майже всіх інших, і зв'язок усіх трейдерів із найбільш впливомими може здійснюватись в один або декілька найкоротших шляхів.  \n\n##### Середній ступінь гармонійності\n\nМарчіорі та Латора [@PhysRevLett.87.198701] запропонували міру, подібну до ([-@eq-14-14]), яка називається **ступенем гармонійності**. Для заданого вузла $j$ вона може бути визначена як\n\n$$\nHc_{j} = \\sum_{i=1, i \\neq j}^{N} \\left( l_{ij} \\right)^{-1}, \n$$ {#eq-14-24}\n\nде $(l_{ij})^{-1}=0$, якщо між вузлами $i$ та $j$ немає шляху. Середній ступінь гармонійності визначається через середнє арифметичне локальних ступенів гармонійності. \n\n#### Асортативність\n\nАсортативність означає тенденцію в мережі до з'єднання вузлів з подібними властивостями, тоді як диассортативність виявляється у з'єднанні вузлів з різнорідними властивостями. Реальні мережі можуть демонструвати різну асортативність. Соціальні мережі, такі як взаємодії між вченими або корпоративними директорами, зазвичай мають позитивну асортативність. З іншого боку, технологічні та біологічні мережі, такі як електромережі, Інтернет, білкові взаємодії, нейронні мережі та харчові мережі, зазвичай виявляють негативну асортативність.\n\nДалі буде представлено декілька показників асортативності для передчасної ідентифікації криптовалютних криз.\n\n##### Середня ступенева зв'язність\n\nСередня ступенева зв'язність $d_{nn}(d)$ для вершин зі ступенем $d$ є ще однією мірою, яка використовується для дослідження структури мереж [@PhysRevLett.87.258701]. Оскільки вона може бути виражена як $d_{nn}(d) = \\sum_{d'}d^{'}P(d^{'}|d)$, де $P(d^{'}| 𝑑)$ --- умовна ймовірність того, що дана вершина зі ступенем $d$ пов'язана з вершиною зі ступенем $d^{'}$. Ця величина виражає кореляцію між ступенями зв'язаних вершин [@protein_net]. За відсутності кореляцій між ступенями, $𝑃(𝑑^{'}| 𝑑)$ не залежить від $𝑑$, а також від середнього ступеня найближчих сусідів, тобто $d_{nn}(𝑑)=\\text{const}$ [@PhysRevLett.87.258701]. За наявності кореляцій поведінка $d_{nn}(d)$ визначає два загальні класи мереж. Якщо $d_{nn}(d)$ є зростаючою функцією від $d$, тоді вершини з високим (низьким) ступенем мають більшу ймовірність бути пов'язаними з вершинами з вищим (нижчим) ступенем. Ця властивість у різних галузях науки називається *асортативним змішуванням* [@PhysRevLett.89.208701]. Навпаки, спадна поведінка $d_{nn}(d)$ визначає *дизасортативне змішування*, в тому сенсі, що вершини з високим (низьким) ступенем мають більшість сусідів з низьким (високим) ступенем вершин.\n\nМіру такої сортативності чи дизасортативності для сусідів певної вершини $i$ можна визначити як **середню ступеневу зв'язність** (середньозважений ступінь найближчого сусіда):\n\n$$\nd_{i}^{w} = \\frac{1}{s_i}\\sum_{j=1}^{N}A_{ij}w_{ij}d_{j},\n$$ {#eq-14-25}\n\nде $s_i = \\sum_{j=1}^{N}A_{ij}w_{ij}$ --- це \"сила\" $i$-го вузла; $A_{ij}$ --- це елемент матриці суміжності $A$; $w_{ij}$ --- це вага ребра $e_{ij}$ (у нашому випадку вона дорівнює 1); $d_j$ представляє ступінь вершини $j$-го сусіда. \n\nЗагалом, це рівняння вимірює ступінь тяжіння сусідів з високим або низьким ступенем вершини один до одного відносно величини фактичних взаємодій.\n\nЯк можна бачити з даного рисунка ([@fig-degree-conn]), середня ступенева зв’язність зростає в передкризові періоди, що вказує на поступове зростання ступеня тяготіння вершин з високою степеневою центральністю до вершин із ще вищою центральністю. \n\n##### Ступінь асортативності\n\nІнша форма асортативного змішування залежить від однієї або декількох скалярних властивостей вершин мережі. Для його обчислення ми визначаємо матрицю $e_{ij}$, яка задовольняє правилам додавання: $\\sum_{ij}e_{ij}=1$, $\\sum_{j}e_{ij}=a_i$, $\\sum_{i}e_{ij}=b_j$, де $a_i$ та $b_j$ --- частки ребер, які починаються та закінчуються у вершинах $i$ та $j$. Розрахувавши коефіцієнт кореляції Пірсона, можна визначити ступінь асортативності [@PhysRevLett.89.208701]. Таким чином, цей коефіцієнт асортативності обчислюється як\n\n$$\nr = \\sum_{xy}xy(e_{xy} - a_{x}b_{y}) \\Big/ \\sigma_{a}\\sigma_{b},\n$$ {#eq-14-26}\n\nа $\\sigma_{a}$ та $\\sigma_{b}$ визначають стандартні відхилення розподілів $a_x$ та $b_y$; $-1 \\leq r \\leq 1$, де $r<0$ вказує на вищу дизасортативність, $r>0$ демонструє вищу асортативність, а $r=0$ говорить про відсутність асортативності між вершинами.\n\nНа [@fig-assort] видно, що коефіцієнт асортативності спадає в передкризові періоди, що вказує на дизасортативну поведінку ринку в ці моменти часу: вершини з малим ступенем зв’язності й централізованості тяжіють до вершин, що характеризуються високим ступенем посередництва, гармонійності, інформаційності, близькості тощо. Як уже зазначалося, дизасортативність, що властива передкризовим періодам Біткоїна, характерна і як для реальних соціальних мереж, так і для складних біологічних мереж. \n\n#### Кластеризація\n\nУ теорії графів, коефіцієнт кластеризації вказує на те, наскільки вузли у графі мають тенденцію групуватися. Дослідження показують, що у більшості реальних мереж, зокрема, у соціальних мережах, вузли зазвичай утворюють компактні групи з високою кількістю зв'язків між ними. \n\nДля подальшого аналізу розглянемо показники транзитивності, глобальної тріадної і квадратичної кластеризацій. \n\n##### Коефіцієнт глобальної кластеризації\n\nДля того, щоб охарактеризувати щільність зв'язків між сусідами вершини $i$, ми можемо використати коефіцієнт локальної кластеризації:\n\n$$\nC_{i}^{3} = \\sum_{k,j=1}^{N}A_{ik}A_{kj}A_{ji} \\Bigg/ d_i(d_i - 1),\n$$ {#eq-14-26}\n\nде чисельник позначає кількість закритих трикутників, що містять вершину $i$.\n\nМи можемо розглядати **глобальний коефіцієнт кластеризації**, як середнє арифметичне локального коефіцієнта кластеризації трикутників [@watts1998collective]:\n\n$$\n\\langle C^{3} \\rangle = \\frac{1}{N}\\sum_{i=1}^{N}C_{i}^{3},\n$$ {#eq-14-27}\n\nщо вимірює середню схильність системи до утворення трикутних кластерів.\n\nНа [@fig-triad-clust] видно, що в абсолютних значеннях глобальний коефіцієнт тріадної кластеризації залишається на достатньо високому рівні, що говорить про досить високий ступінь кластеризації трейдерів криптовалютного ринку. Локально, в передкризові періоди, видно, що $\\langle C^{3} \\rangle$ спадає, що говорить про локалізовану руйнацію кластеризованих групувань трейдерів і зростання їх тяжіння до одного або декількох гравців ринку. \n\n##### Транзитивність\n\nУ випадку дуже неоднорідних степенів, тобто безмасштабних мереж, де лише кілька вершин мають високу степінь, а інші --- низьку ($d_i < 2$), вершини з низькою степенню будуть брати участь переважно в обчисленні локального коефіцієнта кластеризації, що може призвести до недооцінки трикутних кластерів у мережі. Баррат і Вайгт [@barrat2000properties] запропонували альтернативний підхід для подолання такої проблеми, який отримав назву **транзитивності** [@BOCCALETTI2006175]:\n\n$$\nT = \\sum_{k,j=1}^{N}A_{ik}A_{kj}A_{ji} \\Bigg/ \\sum_{i,k,j=1}^{N}A_{ik}A_{ji}.\n$$ {#eq-14-28}\n\nУ реальних мережах ми можемо зіткнутися з випадками, коли зв'язані сусіди в мережі можуть утворювати різні кліки (форми кластеризації). Класичний коефіцієнт локальної кластеризації, який вимірює імовірність знаходження трикутників, зазвичай відповідає одностороннім мережам. Однак він не може бути сформований у двосторонніх мережах [@HOLME2004155;@PhysRevE.68.056107]. Складні структури односторонніх, двосторонніх і багатосторонніх мереж реальної системи можуть призвести до утворення кластерів набагато вищого порядку.\n\nПоказник транзитивності працює подібно до $\\langle C^{3} \\rangle$. Однак, на відміну від $\\langle C^{3} \\rangle$, він надає куди більше сигналів про подальшу крахову поведінку на ринку Біткоїна. Видно, що на ринку зберігається досить висока частка трикутних кліків, які стають неповними в передкризові періоди, на що і вказує спадання $T$. \n\n##### Коефіцієнт квадратичної кластеризації\n\nПодібно до $C_{i}^{3}$, який є класичним коефіцієнтом локальної кластеризації, було запропоновано кількісно оцінити коефіцієнт кластеризації $C_{i}^{4}$ [@PhysRevE.72.056127], який відповідає ймовірності знайти \"квадратний\" кластер, утворений сусідами вузла $i$. Тобто, що два сусіди вузла $i$ мають спільного сусіда, відмінного від $i$. Для кожної вершини $i$ вона може бути обчислена як\n\n$$\nC_{i}^{4} = \\frac{\\sum_{k=1}^{d_i}\\sum_{j=k+1}^{d_i}q_i(k, j)}{\\sum_{k=1}^{d_i}\\sum_{j=k+1}^{d_i}[a_{i}(k, j) + q_i(k, j)]},\n$$ {#eq-14-29}\n\nде $q_i(k, j)$ представляє кількість спостережуваних квадратних кластерів; $a_i(k, j) = \\left( d_k - (1+q_{i}(k, j) + \\theta_{ki}) \\right) + \\left( d_{j} - (1 + q_{i}(k, j) + \\theta_{kj}) \\right)$; $\\theta_{kj}=1$ якщо $k$ і $j$ є зв'язними і 0 у зворотньому випадку [@ZHANG20086869]. Схожим чином до [-@eq-14-27] ми можемо визначити **глобальний коефіцієнт квадратичної кластеризації** як \n\n$$\n\\langle C^{4} \\rangle = \\frac{1}{N}\\sum_{i=1}^{N}C_{i}^{4}. \n$$ {#eq-14-30}\n\n\n[@fig-quad-clust] демонструє, що глобально Біткоїн містить куди меншу частку квадратичних кластерів у порівнянні з тріадними. Локально ми спостерігаємо подібну до попередніх показників динаміку: $\\langle С_4 \\rangle$ спадає в передкризовий період і поступово зростає в посткризовий. Можна зробити таке саме припущення, що й до цього: у передкризові періоди трейдери починають поступово ізолюватися від аналітики один одного і спрямовувати свою увагу на дії одного або декількох найбільш впливових груп. Хоча їх кластеризація спадає, але дії залишаються узгодженими згідно тієї інформації, що доходить до них із зовні. \n\n#### Зв'язність \n\nУ математиці **зв'язний граф** --- це граф, у якого кількість ребер наближається до максимально можливої (коли кожна пара вершин з'єднана одним ребром). І навпаки, **розріджений граф** містить лише невелику кількість ребер. Точне визначення того, який граф вважати зв'язним або розрідженим, є неоднозначним. Отже, визначення щільності графа може змінюватись у залежності від контексту задачі.\n\n##### Щільність\n\nЩільність графа може допомогти визначити, наскільки густо заселений різними ребрами представлений граф. Чим вона вища, тим більшою є зв'язність досліджуваного графа. Її можна обчислити як \n\n$$\n\\rho = E \\big/ E_{max}, \n$$ {#eq-14-31}\n\nде $E$ дорівнює кількості ребер у $G$, а $E_{max}=N(N-1)/2$ --- це максимальна кількість ребер у простому ненаправленому графі. \n\nНа рисунку можна бачити, що глобальна зв'язність ринку залишається досить низькою ($\\rho<0.10$), що говорить про недостатньо високий рівень зв'язності між теперішніми та минулими вузлами цінових коливань ринку Біткоїна. Віконна динаміка $\\rho$ вказує на те, що в передкризовий момент часу ступінь щільності зв'язків учасників ринку зростає, що робить граф Біткоїна більш стійким.  \n\n#### Міри відстані\n\nНа основі довжини найкоротшого шляху графа ми можемо отримати безліч інших показників його ефективності або віддаленості його вершин від центру зв’язності досліджуваного графа. \n\n##### Діаметр\n\nЗауважимо, що найкоротший шлях, який є характеристикою відстані між досліджуваними вершинами $i$ та $j$, може бути використаний для характеристики загального розміру мережі. Величина, яка визначає найбільшу відстань між вершиною $i$ та будь-якою іншою вершиною, називається **ексцентриситетом**:\n\n$$\n\\varepsilon(i) = \\max_{j}l_{ij}.\n$$ {#eq-14-32}\n\nРозмір мережі можна охарактеризувати в термінах **діаметру** і визначити як\n\n$$\ndiam = \\max_{i}\\varepsilon(i) = \\max_{i}\\max_{j}l_{ij}.\n$$ {#eq-14-33}\n\n\nНа [@fig-diam] видно, що діаметр графа спадає в передкризовий період, що говорить про зближення верхньої границі графа до його центру. Тобто, інформація, що проходитиме на криптовалютному ринку від одного трейдера до іншого, займатиме набагато менше кроків. Іншими словами, у передкризові періоди трейдери все менше покладаються на посередників із різноманітних новинних ресурсів і більше часу відводять на пряме опрацювання торгівельних закономірностей на ринку. \n\n##### Радіус\n\nТаким чином, діаметр --- це найбільша (максимальна) довжина шляху в мережі. Отже, ми можемо визначити найменший ексцентриситет досліджуваної мережі, який називається **радіусом**:\n\n$$\nrad = \\min_{i}\\varepsilon(i) = \\min_{i}\\max_{j}l_{ij}.\n$$ {#eq-14-34}\n\nОскільки радіус графа це найменший ексцентриситет мережі, а діаметр є найбільшим, можна зробити подібний висновок. Якщо придивитися, то можна помітити, що радіус представляє приблизно в двічі меншу за діаметр версію, але тренд цих обох індикаторів ідентичний. \n\n#### Ефективність\n\nУ галузі мережної науки ефективність мережі в передачі інформації, яку також називають комунікаційною ефективністю, є ключовою метрикою. Це поняття ґрунтується на припущенні, що чим далі один від одного знаходяться два вузли в мережі, тим менш ефективною стає їхня комунікація. Ефективність можна аналізувати як на локальному, так і на глобальному рівнях мережі. На глобальному рівні оцінюється загальний обмін інформацією по всій мережі, де інформаційні потоки протікають паралельно. На локальному рівні вимірюється стійкість мережі до збоїв у менших масштабах. Зокрема, локальна ефективність вузла i відображає, наскільки ефективно його сусіди обмінюються інформацією за його відсутності.\n\n##### Глобальна ефективність\n\nВизначення поведінки в малому світі згідно з [@PhysRevLett.87.198701] можна подати в термінах ефективності $E$ мережі. Ефективність $\\varepsilon_{ij}$ між вершинами $i$ та $j$ визначається як $1/l_{ij}$. Коли $l_{ij}=\\infty$ і, послідовно, якщо $1/l_{ij}=0$, $i$ і $j$ вважаються роз'єднаними. Відповідно до формалізму ефективності, вона може бути кількісно визначена як для глобальних, так і для локальних масштабів $G$. Латора та Марчіорі підкреслювали, що $1/L$ та $C$ можна розглядати як перші наближення **глобальної** ($E_{glob}$) та **локальної ($E_{loc}$) ефективності**.\n\nСередню (глобальну) ефективність $G$ можна визначити як\n\n$$\nE_{glob} = \\sum_{i,j=1}\\left( l_{ij} \\right)^{-1} \\Big/ N(N-1).\n$$ {#eq-14-35}\n\nДля найбільш ефективного графа, де інформація поширюється найбільш ефективно, $E_{glob}$ набуває максимального значення, а в іншому випадку --- мінімального.\n\nНа [@fig-glob-effectiv] видно, що ступінь глобальної ефективності мережі зростає в передкризові періоди, що вказує на зростання ступеня проходження інформації в мережі. З точки зору графа видимості, Біткоїн починає діяти в більш детермінований спосіб, де зв’язність його графа видимості стає близькою до топології ідеального графа, де вся інформація передається в найефективніший спосіб. \n\n##### Локальна ефективність\n\nЛокальна ефективність відіграє роль, подібну до глобального коефіцієнта кластеризації. Локальна ефективність $E_{loc}$ може бути кількісно визначена як\n\n$$\nE_{loc} = \\frac{1}{N}\\sum_{i \\in G_i}E_{glob}(G_i),\n$$ {#eq-14-36}\n\nде $G_i$ --- локальний підграф $G$, а $E_{glob}(G_i)$ характеризує ефективність цього конкретного підграфа. Подібно до глобального коефіцієнта кластеризації, $E_{loc}$ визначає, наскільки відмовостійкою є досліджувана система, тобто наскільки ефективним є транспортування інформації між першими сусідами $i$-го вузла при його видаленні.\n\nГлобально, $E_{loc}\\approx0.85$ для ринку Біткоїна, що вказує на глобальну стійкість криптовалютної мережі до можливих атак і виключень трейдерів ринку з глобальної торгівлі. Віконна процедура показує, що $E_{loc}$ спадає в передкризові періоди, що вказує на спад локальної ефективності мережі. Як уже зазначалося, оскільки увага більшості спрямовується на одного або декількох крупних гравців ринку, їх потенційне відключення з глобальної торгівлі могло б дестабілізувати весь криптовалютний ринок.\n\n#### Найкоротший шлях\n\n##### Середня довжина найкоротшого шляху\n\nЗвертаючи увагу на довжину найкоротшого шляху між двома вершинами $i$ та $j$, ми можемо визначити таку міру, як **середня довжина найкоротшого шляху**:\n\n$$\nApLen = \\sum_{i \\neq j}l_{ij} \\Big/ N(N-1). \n$$ {#eq-14-37}\n\n\nНа [@fig-path-length] продемонстровано, що $ApLen$ характеризується спадом у передкризові періоди та зростанням у кризові й посткризові періоди. Подібно до попередніх індикаторів, що тільки опиралися на довжини найкоротшого шляху між парами вершин, $ApLen$ вказує на зростання ефективності передачі інформації між трейдерами ринку. Також можна сказати, що на побудованому криптовалютному графі видимості минулі значення “бачать” теперішні в більш ефективний спосіб, що відображається в персистентності ринку в передкризовий період. \n\n## Висновок\n\nУ даній роботі було продемонстровано можливість дослідження складних соціально-економічних систем в рамках мережної парадигми складності. Часовий ряд Біткоїна був представлений еквівалентним чином --- мережею видимості, яка має широкий спектр характеристик: і спектральних, і топологічних. Приклади криптовалютних крахів показали, що більшість мережних показників можуть слугувати індикаторами-передвісниками кризових явищ і можуть бути використані для можливого раннього попередження небажаних криз на криптовалютних ринках. \n\n## Завдання для самостійної роботи\n\n1. Для заданих часових рядів чи їх сукупності побудувати всі види мереж, дослідити їх графодинаміку, порівняти результати і зробити висновки щодо їх прогностичних можливостей\n2. Проаналізувати результати як для вихідного ряду, так і для стандартизованих прибутковостей.\n3. Як змінюються результати для не фінансових часових рядів. Чи спостерігається універсальність результатів?\n","srcMarkdownNoYaml":"\n\n\n\n\n\n\n**Тема.** Графодинамічний аналіз часових рядів\n\n**Мета.** Навчитися використовувати елементи теорії графів для отримання спектральних і топологічних мір складності систем, що характеризуються часовими рядами\n\n## Теоретичні відомості\n\nУ попередній роботі ми ввели поняття мір складності для найпростіших графів та поширених мережних моделей, порівняли деякі з мір складності. У даній роботі ми продемонструємо сучасні методи перетворення часових рядів у мережу (граф) з подальшим дослідженням відповідних спектральних і топологічних мір складності. Ми також покажемо, що вказані міри можна співставляти з динамікою вихідного часового ряду (звідси **графодинаміка**) і якщо вони є інформативними щодо можливих змін власне ряду, то їх можливо використовувати для побудови індикаторів характерної динаміки складних систем.\n\nБільшість складних систем інформують про свою структурну та динамічну природу, генеруючи послідовність певних характеристик, що можна представити часовими рядами. Останніми роками розроблено цікаві алгоритми перетворення часових рядів у мережу, що дозволяє розширити діапазон відомих характеристик часових рядів навіть до мережних. Останнім часом було запропоновано декілька підходів до перетворення часових послідовностей у складні мережеподібні відображення. Ці методи можна умовно розділити на три класи [@DONNER2011]. Перший базується на вивченні \"видимості\" послідовних значень часового ряду і називається графом видимості (Visibility Graph, VG) [@DONNER2011;@vg_lacasa].\n\nДругий аналізує взаємне наближення різних відрізків часової послідовності і використовує техніку рекурентного аналізу [@DONNER2011] (див. лабораторні 2-3). Рекурентна діаграма відображає існуючу повторюваність фазових траєкторій у вигляді бінарної матриці, елементами якої є одиниці або нулі, залежно від того, чи є близькими (рекурентними) із заданою точністю чи ні обрані точки фазового простору динамічної системи. Рекурентна діаграма легко трансформується в матрицю суміжності, за якою розраховуються спектральні та топологічні характеристики графа [@review_econophys].\n\nНарешті, якщо в основу формування зв'язків елементів графа покласти кореляційні відношення між ними, то отримаємо кореляційний граф [@DONNER2011]. Для побудови та аналізу властивостей кореляційного графа необхідно сформувати з кореляційної матриці матрицю суміжності. Для цього необхідно ввести величину, яка для кореляційного поля буде слугувати відстанню між корельованими агентами. Така відстань може бути представлена як $d_{ij}=\\sqrt{2(1-C_{ij})}$, де $C_{ij}$ --- це коефіцієнт кореляції між двома активами. Так, якщо коефіцієнт кореляції між двома активами значний, то відстань між ними невелика, і, починаючи з певного критичного значення $d_{cr}$, активи можна вважати зв'язаними на графі. Для матриці суміжності це означає, що вони є суміжними на графі. В іншому випадку активи не є суміжними. У цьому випадку умова зв'язності графа є обов'язковою умовою.\n\nОсновною метою таких методів є точне відтворення інформації, що зберігається в часових рядах, в альтернативній математичній структурі, щоб згодом можна було використовувати потужні інструменти теорії графів для характеристики часових рядів з іншої точки зору з метою подолання розриву між нелінійним аналізом часових рядів, динамічних систем і теорією графів.\n\nУ даній роботі розглянемо лише алгоритм графа видимості (див. опис у лаб. 11).\n\n### Пакет `ts2vg`\n\nДля подальшої побудови класичного VG або його горизонтального аналогу, ми будемо використовувати бібліотеку [`ts2vg`](https://cbergillos.com/ts2vg/index.html#id3). Пакет `ts2vg` надає високопродуктивну реалізацію алгоритму для побудови графів видимості з даних часових рядів, вперше представленого Лукасом Лакасою та ін. у 2008 році [@vg_lacasa].\n\nГрафи видимості та деякі з їхніх властивостей (наприклад, степеневі розподіли) обчислюються швидко та ефективно навіть для часових рядів з мільйонами спостережень. Для обчислення графів використовується ефективний алгоритм \"розділяй і володарюй\", коли це можливо [@10.1063/1.4927835].\n\n#### Встановлення\n\nОстання випущена версія `ts2vg` доступна на [PyPI](https://pypi.org/project/ts2vg) і може бути легко встановлена шляхом запуску наступної команди:\n\n#### Підтримувані типи графів\n\n##### Основні типи\n\n1. Класичний граф видимості [@vg_lacasa] (`ts2vg.NaturalVG`).\n2. Горизонтальний граф видимості [@PhysRevE.80.046103] (`ts2vg.HorizontalVG`).\n\n##### Доступні варіації\n\n1. Зважений граф видимості (через параметр `weighted`).\n2. Направлений граф видимості (через параметр `directed`).\n3. Параметричний граф видимості [@BEZSUDNOV201453] (через параметри `min_weight` та `max_weight`).\n4. Граф обмеженої проникної видимості [@2012-3-030506;@10.1063/5.0048243] (через параметр `penetrable_limit`).\n\nЗверніть увагу, що кілька варіантів графів можна комбінувати і використовувати одночасно. Із більш детальною документацією можна ознайомитись на сайті бібліотеки [`ts2vg`](https://carlosbergillos.github.io/ts2vg/). \n\n##### Сумісність з іншими бібліотеками\n\nОтримані графи можуть бути легко перетворені в графові об'єкти з інших поширених графових бібліотек Python, таких як `igraph`, `NetworkX` та `SNAP` для подальшого аналізу.\n\nДля цього передбачені наступні методи:\n\n- `as_igraph()`;\n- `as_network()`;\n- `as_snap()`.\n\n## Хід роботи\n\nСпочатку імпортуємо необхідні модулі для подальшої роботи:\n\nІ виконаємо налаштування рисунків для виведення:\n\nРозглянемо можливість використання графодинамічних показників у якості індикаторів або індикаторів-передвісників кризових явищ. Для прикладу завантажимо часовий ряд криптовалютного індексу Біткоїна за весь часовий період, що надається веб-ресурсом `yfinance`:\n\n::: {.callout-warning}\n## Увага\n\nВиконайте цей блок, якщо хочете зчитати дані не з Yahoo! Finance, а із власного файлу. Зрозуміло, що й аналіз результатів, і висновки залежать від того, з яким рядом ми працюємо \n\n:::\n\n---\n\n---\n\nВиведемо досліджуваний ряд:\n\nЯк і до цього, визначимо функцію для перетворення ряду (його стандартизації або знаходження прибутковостей). Для цього оголосимо функцію `transformation()`, що прийматиме на вхід часовий сигнал, тип ряду, і повертатиме його перетворення. Як показували попередні дослідження авторів, вихідне представлення часового ряду надає найбільш інформативне представлення для побудови графа. Тим не менш, ми допускаємо, що, наприклад, прибутковості фізичного сигналу можуть мати краще графове представлення, тому і визначаємо цю функцію в даній роботі. \n\nПовертаємо той самий вихідний сигнал. \n\nДалі задаємо параметри досліджуваного графа. Для подальших розрахунків ми будемо використовувати одні й ті ж самі значення часового вікна, кроку й типу ряду. \n\n### Побудова графа\n\nОскільки побудова графа для всього часового ряду може зайняти досить великий проміжок часу, ми будемо будувати граф видимості лише для його фрагменту. Для цього визначимо параметри `index_begin` та `index_end`, які будуть вказувати на початок відліку побудови та кінець. Для класичного графа видимості маємо: \n\nЯк ми можемо бачити з представленого рисунку, три послідовних зростання та спадання ціни BTC у 2021-2022 роках характеризуються доволі високим ступенем видимості в передкризовий період. Також дані піки утворюють орієнтовно 3 кластери із високою ступеневою центральністю. Крахові події на криптовалютному ринку можна розглядати як графи переважного приєднання, де, можливо, ключову роль у цих підйомах та спадах можуть відігравати один або декілька \"китів\" ринку, котрі чинять найбільший вплив на ринок і спрямовують вектор уваги всіх трейдерів у тому чи іншому напрямі.  \n\n### Віконна процедура\n\nДалі будемо спостерігати за тим, як змінюються властивості мережі з плином часу. Для цього використаємо добре знайому нам процедуру рухомого вікна. У рамках цієї процедури дослідимо графодинаміку як спектральних, так і топологічних показників. \n\nДля побудови парної динаміки конкретного індикатора та досліджуваного ряду визначимо функцію `plot_pair`:\n\n#### Спектральні характеристики\n\nСпектральна теорія графів базується на вивченні властивостей графів через власні значення або власні вектори матриці суміжності $A$ або матриці Лапласа $L$ [@Chung:1997].\n\nНагадаємо, що стандартна матриця Лапласа для графа $G$ визначається як\n\n$$\nL = D - A, \n$$ {#eq-14-3}\n\n$D$ --- діагональна матриця $G$, де $i$-ий діагональний елемент є ступенем вершини $i$ в $G$ [@spec_graph_theory], а $A$ --- матриця суміжності $G$. У цій роботі ми представляємо спектральні характеристики для нормованої матриці Лапласа [@norm_lapl], яка визначається як\n\n$$\n\\hat{L} = D^{-1/2}LD^{-1/2}. \n$$ {#eq-14-4}\n\nЯкщо $\\lambda$ --- власне значення $\\hat{L}$, тоді $\\lambda \\in [0, 2]$ [@Chung:1997]; тобто, нормалізуючи матрицю Лапласа, ми нормалізуємо власні значення. \n\nЗберігаємо абсолютні значення у текстовому документі. Також готуємо мітки для рисунків та назви збережених мір:\n\n##### Алгебраїчна зв'язність\n\nЩодо власних значень матриці Лапласа, однією з основних характеристик, яку ми можемо отримати, є **алгебраїчна зв'язність** $\\lambda_2$ графа, яка відповідає другому найменшому власному значенню матриці. Цей показник відображає кількість роз'єднаних компонент. Для незв'язного графа $\\lambda_2$ буде дорівнювати нулю, а для графа з вищою щільністю зв'язків $\\lambda_2$ буде більшим. Використовуючи цей показник, можливо визначити відмовостійкість і синхронізованість досліджуваної системи.\n\nНа [@fig-alg-con] видно, що $\\lambda_2$ зростає в передкризові періоди часу, що говорить про зростання ступеня синхронізованності між трейдерами ринку в дані періоди часу. Мережа крипторинку набуває все більшої корельованості та стійкості. Подібна динаміка може вказувати на зростання узгодженності між великими гравцями ринку щодо своїх подальших дій на Біткоїні. \n\n##### Енергія графа\n\nЗ власних значень матриці суміжності $A$ з $G$ можна визначити таку міру, як **енергія графа** $E(G)$ [@PhysRevE.85.016117;@gutman1978energy]:\n\n$$\nE = E(G) = \\sum_{i=1}^{N}\\left| \\lambda_i \\right|.\n$$ {#eq-14-5}\n\nПодібно до $\\lambda_2$, ми маємо повністю роз'єднаний граф, коли $E(G)=0$. Для кожного $\\lambda_i > 0$ існує багато ребер $e_{ij}$, які визначають високу та ефективну зв'язність $G$.\n\n[@fig-alg-energy] демонструє, що в періоди відносної стабільності $E$ залишається на досить низькому рівні, що вказує на роз'єднаність трейдерів ринку в подібні періоди. Як покупці, так і продавці діють досить некорельовано. У передкризові періоди енергія починає зростати, що вказує на зростання ефективності роботи між гравцями ринку та їх зв'язності. \n\n##### Cпектральний радіус\n\nКрім наведених вище мір, можна визначити такі міри, як **спектральний радіус**, яка є найбільшим абсолютним власним значенням матриці $A$:\n\n$$\nR = R(G) = \\max_{1\\leq i \\leq N}\\left| \\lambda_i \\right|. \n$$ {#eq-14-6}\n\n\nНа даному рисунку ([@fig-alg-rad]) видно, що спектральний радіус зростає в кризові й передкризові періоди, що вказує на зростання корельованості графа Біткоїна та синхронізованості дій трейдерів.\n\n##### Cпектральний розрив\n\nПроранжувавши власні значення матриці суміжності $G$ у неспадаючому порядку, тобто $\\lambda_1 \\leq \\lambda_2 \\leq ... \\leq \\lambda_n$, ми можемо визначити таку міру, як **спектральний розрив**:\n\n$$\n\\delta = \\delta(G) = \\lambda_{n} - \\lambda_{n-1}\n$$ {#eq-14-7}\n\nдля якого $\\lambda_n$ --- перше найбільше власне значення $\\hat{L}$, а $\\lambda_{n-1}$ друге найбільше власне значення. Спектральний розрив показує швидкість синхронізації в досліджуваній мережі. Чим він більший, тим більш взаємопов'язаними є вершини і тим складнішим є граф.\n\n[@fig-alg-gap] демонструє, що спектральний розрив також є показником синхронізованності ринку в передкризові період. Однак, із динаміки даного показника можна сказати, що в моменти криз найбільшу кількість інформації починає нести найбільше власне значення матриці Лапласа. Можна припустити, що друге і третє також можуть слугувати в якості індикаторів крахових подій, але найбільше власне значення в даному випадку представляється найкращим рішенням. \n\n##### Cпектральний момент\n\nСпектральною мірою складності, яку ми також хотіли б представити є **$k$-й спектральний момент**. Для невід'ємного цілого числа $k$, $k$-ий спектральний момент визначається як\n\n$$\nm_k = m_k(G) = \\sum_{i=1}^{N}\\lambda_{i}^{k}, \n$$ {#eq-14-8}\n\nде $m_k$ дорівнює кількості замкнутих обходів довжини $k$ [@cvetkovic1980spectra]. Кількість замкнутих обходів є важливим показником для вимірювання складності системи. Як було показано в роботі Ву та ін. [@5740372], використовуючи кількість замкнутих обходів всієї довжини, ми можемо виміряти складність графа та надлишковість альтернативних найкоротших шляхів. Отже, більші значення $m_k$ відповідають більшій складності мережі. Для подальших обчислень ми обрали $k=3$.\n\nЗ динаміки $m^3$ видно, що найбільш суттєвим ступенем синхронізованності характеризувалась предкризова динаміка 2018, середини 2019 і 2021 років. У ці періоди часу ми мали найбільшу кількість досить високих власних значень матриці Лапласа, а одже й достатньо високий ступінь синхронізації ринку в зазначені періоди. \n\n##### Cпектральна природна зв'язність\n\nЮнь та ін. [@Wu_Jun_2010] запропонували вимірювати \"середнє власне значення\" спектра суміжності графа $G$. Було запропоновано називати цей показник **природною зв'язністю** або **природним власним значенням**:\n\n$$\nN_c = N_c(G) = \\ln{\\left( \\frac{1}{N}\\sum_{i=1}^{N}\\exp{\\lambda_i} \\right)}.\n$$ {#eq-14-9}\n\nЕстрада [@E_Estrada_2006], Ву та ін. [@5740372] показали, що ([-@eq-14-9]) є чутливою та надійною мірою стійкості мережі.\n\nНа [@fig-alg-conn] видно, що показник природної зв'язності зростає у передкризові періоди часу. Тобто, даний показник можна використовувати в якості індикатора або індикатора-передвісника крахових подій на ринку Біткоїна. Особливо характерним є зростання ступеня синхронізованності ринку напередодні 2018 року, що може вказувати на початкові стадії зміцнення стійкості криптовалютної мережі. Досить високий ступінь синхронізованності ринку можна спостерігати напередодні середини 2019 та початку 2021 років. \n\n#### Топологічні міри центральності\n\nІснує багато способів кількісно оцінити важливість вершини або ребра з точки зору певного мережного атрибуту, відображаючи таким чином **топологію** складної мережі.\n\nЗберігаємо абсолютні значення у текстовому документі. Також готуємо мітки для рисунків та назви збережених:\n\n##### Максимальний ступінь вершини\n\n**Ступінь вершини** або **ступенева центральність** є концептуально найпростішою метрикою для опису характеристик зв'язку однієї вершини в складній мережі. Вона може бути представлена у вигляді\n\n$$\nd_i = \\sum_{j=1}^{N}A_{ij},\n$$ {#eq-14-10}\n\nде $d_i$ підраховує кількість $j$-их ребер, що інцидентні вершині $i$. \n\nОкрім ступеня конкретної вершини, ми можемо визначити вершину з найбільшою кількістю інцидентних ребер. Кількість таких вершин можемо позначити як $D_{max}$: \n\n$$\nD_{max} = \\max_{i=1,...,N}d_i.\n$$ {#eq-14-11}\n\nНа даному рисунку ([@fig-deg]) видно, що максимальний ступінь вершини починає зростати в кризові та передкризові періоди, що вказує на зростання центральності одного або декількох вузлів. Можна припустити, що один або декілька трейдерів ринку починають концентрувати на собі увагу всіх інших діячів дотичних до ринку Біткоїна. \n\n##### Середній ступінь впливовості\n\nСтупінь впливовості обчислює оцінку важливості вузла шляхом додавання впливовостей його сусідів. Впливовість для вузла $i$ --- це $i$-й елемент власного вектора $x$, пов'язаний з власним значенням $\\lambda$ максимального модуля, який є додатним. Такий власний вектор $x$ визначається з точністю до мультиплікативної константи рівнянням\n\n$$\n\\lambda x^{T} = x^{T}A,\n$$ {#eq-14-12}\n\nде $A$ --- матриця суміжності графа $G$. Наведене вище рівняння еквівалентне наступному:\n\n$$\n\\lambda x_i = \\sum_{j \\to i}x_j.\n$$ {#eq-14-13}\n\nТобто, додавання ступенів впливовості попередників вершини $i$ дає ступінь впливовості $i$, помножену на $\\lambda$. У випадку неорієнтованих графів $x$ також розв'язує знайоме рівняння $Ax =\\lambda x$.\n\nЗа теоремою Перрона-Фробеніуса [@doi:10.1137/1.9781611971262], якщо $G$ сильно зв'язний, то існує єдиний власний вектор $x$, і всі його елементи строго додатні.\n\nЯкщо $G$ не є сильно зв'язним, то може існувати декілька лівих власних векторів, пов'язаних з $\\lambda$, причому деякі з їх елементів можуть дорівнювати нулю.\n\n::: {.callout-note}\n## Примітка\n\nСтупінь впливовості або центральність за власним вектором було введено Ландау [@Schoenberg1969] для шахових турнірів. Пізніше його знову відкрив Вей [@wei1952algebraic], а потім популяризував Кендалл [@760e07d1-fd0d-3ce0-afae-f7ab9cd57766] в контексті спортивного рейтингу. Берге ввів загальне визначення для графів, заснованих на соціальних зв'язках [@berge1958]. Бонаcіч [@35397813-90c1-3806-8d5d-a07b3340ac3d] знову ввів центральність власного вектора і зробив її популярною в аналізі зв'язків.\n\nЦя функція обчислює лівий домінуючий власний вектор, що відповідає додаванню впливовості попередників: це звичайний підхід. Щоб додати центральність наступників, спочатку переверніть граф за допомогою `G.reverse()`.\n\nЦя реалізація використовує [SciPy sparse eigenvalue solver](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.linalg.eigs.html#scipy.sparse.linalg.eigs) (ARPACK) для пошуку найбільшої пари власне значення/власний вектор за допомогою ітерацій Арнольді [@wikipediaArnoldiIteration]\n\n:::\n\nСередній ступінь впливовості характеризується зростанням у передкризові періоди, як правило, спадом під час криз. Подібно до спектральних показників, середній ступінь впливовсті вказує на зростання одного або декількох власних значень матриці суміжності графа та значущості власних векторів центральних вузлів торгівельного графа Біткоїна. \n\n##### Середній ступінь близькості\n\nУ мережі відстань $l_{ij}$ між вузлом $i$ та вузлом $j$ позначає кількість ребер, які з'єднують найкоротший шлях між цими двома вузлами. Спираючись на поняття довжини найкоротшого шляху між двома вузлами, ми можемо надати різні міри, які характеризують зв'язність всієї мережі. Однією з таких мір є центральність або середній ступінь близькості зв'язку між вершиною $i$ та всіма іншими вершинами\n\n$$\nc_i = (N-1)\\Bigg/\\left( \\sum_{j=1}^{N}l_{ij} \\right), \n$$ {#eq-14-14}\n\nщо надають зворотнє середнє по всім найкоротшим шляхам від $i$ до всіх вузлів $j$. \n\nСереднє арифметичне значення ступеня близькості для кожного $i$-го вузла дає нам **глобальний (середній) ступінь близькості**:\n\n$$\nC = \\frac{1}{N}\\sum_{i=1}^{N}c_i. \n$$ {#eq-14-15}\n\n\nЯк можна бачити з представленого рисунку ([@fig-clos]), глобальний ступінь близькості зростає в кризові та передкризові періоди, що вказує на спад довжини найкоротших шляхів у графі видимості криптовалютного ринку. Даний показник зростав напередодні останніх чотирьох років. Це вказує на те, що передодні досліджуваних торгівельних років між трейдерами зростав ступінь синхронізованності їх дій. \n\n##### Середній ступінь інформаційності\n\nДля визначення центральності будь-якого вузла $i$ пропонується спочатку визначити його інформаційну зв'язність з іншими вузлами, тобто $\\left\\{I_{ij} | j=1,..., N \\right\\}$. Середнє гармонійне значення інформації щодо шляху від вузла $i$ до інших вузлів буде використовуватися для визначення **ступеня інформаційності** вузла $i$. Зокрема, якщо $I_i$ пов'язано з центральністю або інформаційністю вузла $i$, то\n\n$$\n\\hat{I_i} = \\left( \\frac{1}{N}\\sum_{j=1}^{N}\\frac{1}{I_{ij}} \\right)^{-1}.\n$$ {#eq-14-16}\n\nЗгідно зі Стівенсоном та Зеленом [@STEPHENSON19891], ступінь інформаційності можна обчислити шляхом інвертування простої матриці. Перш за все, ми визначаємо $N \\times N$ матрицю $B=\\left\\{{b_{ij}} \\right\\}$, де\n\n$$\nb_{ij} = \\begin{cases}\n        0 & \\text{якщо} \\,\\, i \\,\\, та \\,\\, j \\,\\, суміжні,\\\\\n        1 & \\text{інакше},\n    \\end{cases}\n$$ {#eq-14-17}\n\nі $b_{ii}=1+d_i$, де $d_i$ ступінь вершини $i$. \n\nДалі, визначивши матрицю $C = \\left\\{ c_{ij} \\right\\} = B^{-1}$, ми можемо розрахувати $I_{ij}$ згідно рівняння\n\n$$\nI_{ij} = (c_{ii} + c_{jj} - 2c_{ij})^{-1}.\n$$ {#eq-14-18}\n\nЕлемент $\\sum_{j=1}^{N} 1/I_{ij}$ у рівнянні ([-@eq-14-16]) можна переписати наступним чином: \n\n$$\n\\sum_{j=1}^{N}c_{ii} + c_{jj} - 2c_{ij} = Nc_{ii} + T - 2R, \n$$ {#eq-14-19}\n\nде $T = \\sum_{j=1}^{N}c_{jj}$ і $R = \\sum_{j=1}^{N}c_{ij}$. \n\nОтже, ступінь інформаційності вузла $i$ може бути представлений як \n\n$$\nI_i = \\left[ (Nc_{ii} + T - 2R)/N \\right]^{-1} = \\left[ c_{ii} + (T-2R)/N \\right]^{-1}.\n$$ {#eq-14-20}\n\nСхожим чином, для вимірювання глобального ступеня інформаційності ми розглядаємо середнє арифметичне локального ступеня інформаційності:\n\n$$\n\\hat{I} = \\frac{1}{N}\\sum_{i=1}^{N}I_i.\n$$ {#eq-14-21}\n\nНа ([@fig-inf]) видно, що глобальний ступінь інформаційності зростає в передкризові періоди, що є індикатором зростання ефективності передачі інформації між трейдерами ринку та зростання детермінованності динаміки ринку. \n\n##### Максимальний ступінь посередництва\n\nІншою часто досліджуваною характеристикою вершин на основі шляхів є **ступінь посередництва**, яка вимірює частку всіх найкоротших шляхів у мережі, що проходять від $i$ до $j$ через вершину $k$. Для загальної кількості найкоротших шляхів між вершинами $i$ та $j$, позначених як $\\sigma(i,j)$, і найкоротших шляхів, що проходять через дану вершину $k(\\sigma(i, j | k))$, ступінь посередництва можна визначити як\n\n$$\nb_k = \\sum_{i,j=1; i,j \\neq k}^{N} \\sigma(i, j | k) / \\sigma(i, j). \n$$ {#eq-14-22}\n\nЩоб віднайти найбільшу кількість інформації, що проходить через конкретний $k$-й, ми вимірюємо максимальний ступінь посередництва, розглядаючи кожен $k$-ий вузол:\n\n$$\nB = \\max_{i=1,...,N}b_{i}.\n$$ {#eq-14-23}\n\nЯк можна бачити, показник максимального ступеня посередництва спадає в передкризові періоди, що вказує на спад кількості посередників через яких може проходити інформація стосовно подальної динаміки Біткоїна. Це говорить про те, що на ринку зв'являються один або декілька трейдерів на котрих концентрується увага майже всіх інших, і зв'язок усіх трейдерів із найбільш впливомими може здійснюватись в один або декілька найкоротших шляхів.  \n\n##### Середній ступінь гармонійності\n\nМарчіорі та Латора [@PhysRevLett.87.198701] запропонували міру, подібну до ([-@eq-14-14]), яка називається **ступенем гармонійності**. Для заданого вузла $j$ вона може бути визначена як\n\n$$\nHc_{j} = \\sum_{i=1, i \\neq j}^{N} \\left( l_{ij} \\right)^{-1}, \n$$ {#eq-14-24}\n\nде $(l_{ij})^{-1}=0$, якщо між вузлами $i$ та $j$ немає шляху. Середній ступінь гармонійності визначається через середнє арифметичне локальних ступенів гармонійності. \n\n#### Асортативність\n\nАсортативність означає тенденцію в мережі до з'єднання вузлів з подібними властивостями, тоді як диассортативність виявляється у з'єднанні вузлів з різнорідними властивостями. Реальні мережі можуть демонструвати різну асортативність. Соціальні мережі, такі як взаємодії між вченими або корпоративними директорами, зазвичай мають позитивну асортативність. З іншого боку, технологічні та біологічні мережі, такі як електромережі, Інтернет, білкові взаємодії, нейронні мережі та харчові мережі, зазвичай виявляють негативну асортативність.\n\nДалі буде представлено декілька показників асортативності для передчасної ідентифікації криптовалютних криз.\n\n##### Середня ступенева зв'язність\n\nСередня ступенева зв'язність $d_{nn}(d)$ для вершин зі ступенем $d$ є ще однією мірою, яка використовується для дослідження структури мереж [@PhysRevLett.87.258701]. Оскільки вона може бути виражена як $d_{nn}(d) = \\sum_{d'}d^{'}P(d^{'}|d)$, де $P(d^{'}| 𝑑)$ --- умовна ймовірність того, що дана вершина зі ступенем $d$ пов'язана з вершиною зі ступенем $d^{'}$. Ця величина виражає кореляцію між ступенями зв'язаних вершин [@protein_net]. За відсутності кореляцій між ступенями, $𝑃(𝑑^{'}| 𝑑)$ не залежить від $𝑑$, а також від середнього ступеня найближчих сусідів, тобто $d_{nn}(𝑑)=\\text{const}$ [@PhysRevLett.87.258701]. За наявності кореляцій поведінка $d_{nn}(d)$ визначає два загальні класи мереж. Якщо $d_{nn}(d)$ є зростаючою функцією від $d$, тоді вершини з високим (низьким) ступенем мають більшу ймовірність бути пов'язаними з вершинами з вищим (нижчим) ступенем. Ця властивість у різних галузях науки називається *асортативним змішуванням* [@PhysRevLett.89.208701]. Навпаки, спадна поведінка $d_{nn}(d)$ визначає *дизасортативне змішування*, в тому сенсі, що вершини з високим (низьким) ступенем мають більшість сусідів з низьким (високим) ступенем вершин.\n\nМіру такої сортативності чи дизасортативності для сусідів певної вершини $i$ можна визначити як **середню ступеневу зв'язність** (середньозважений ступінь найближчого сусіда):\n\n$$\nd_{i}^{w} = \\frac{1}{s_i}\\sum_{j=1}^{N}A_{ij}w_{ij}d_{j},\n$$ {#eq-14-25}\n\nде $s_i = \\sum_{j=1}^{N}A_{ij}w_{ij}$ --- це \"сила\" $i$-го вузла; $A_{ij}$ --- це елемент матриці суміжності $A$; $w_{ij}$ --- це вага ребра $e_{ij}$ (у нашому випадку вона дорівнює 1); $d_j$ представляє ступінь вершини $j$-го сусіда. \n\nЗагалом, це рівняння вимірює ступінь тяжіння сусідів з високим або низьким ступенем вершини один до одного відносно величини фактичних взаємодій.\n\nЯк можна бачити з даного рисунка ([@fig-degree-conn]), середня ступенева зв’язність зростає в передкризові періоди, що вказує на поступове зростання ступеня тяготіння вершин з високою степеневою центральністю до вершин із ще вищою центральністю. \n\n##### Ступінь асортативності\n\nІнша форма асортативного змішування залежить від однієї або декількох скалярних властивостей вершин мережі. Для його обчислення ми визначаємо матрицю $e_{ij}$, яка задовольняє правилам додавання: $\\sum_{ij}e_{ij}=1$, $\\sum_{j}e_{ij}=a_i$, $\\sum_{i}e_{ij}=b_j$, де $a_i$ та $b_j$ --- частки ребер, які починаються та закінчуються у вершинах $i$ та $j$. Розрахувавши коефіцієнт кореляції Пірсона, можна визначити ступінь асортативності [@PhysRevLett.89.208701]. Таким чином, цей коефіцієнт асортативності обчислюється як\n\n$$\nr = \\sum_{xy}xy(e_{xy} - a_{x}b_{y}) \\Big/ \\sigma_{a}\\sigma_{b},\n$$ {#eq-14-26}\n\nа $\\sigma_{a}$ та $\\sigma_{b}$ визначають стандартні відхилення розподілів $a_x$ та $b_y$; $-1 \\leq r \\leq 1$, де $r<0$ вказує на вищу дизасортативність, $r>0$ демонструє вищу асортативність, а $r=0$ говорить про відсутність асортативності між вершинами.\n\nНа [@fig-assort] видно, що коефіцієнт асортативності спадає в передкризові періоди, що вказує на дизасортативну поведінку ринку в ці моменти часу: вершини з малим ступенем зв’язності й централізованості тяжіють до вершин, що характеризуються високим ступенем посередництва, гармонійності, інформаційності, близькості тощо. Як уже зазначалося, дизасортативність, що властива передкризовим періодам Біткоїна, характерна і як для реальних соціальних мереж, так і для складних біологічних мереж. \n\n#### Кластеризація\n\nУ теорії графів, коефіцієнт кластеризації вказує на те, наскільки вузли у графі мають тенденцію групуватися. Дослідження показують, що у більшості реальних мереж, зокрема, у соціальних мережах, вузли зазвичай утворюють компактні групи з високою кількістю зв'язків між ними. \n\nДля подальшого аналізу розглянемо показники транзитивності, глобальної тріадної і квадратичної кластеризацій. \n\n##### Коефіцієнт глобальної кластеризації\n\nДля того, щоб охарактеризувати щільність зв'язків між сусідами вершини $i$, ми можемо використати коефіцієнт локальної кластеризації:\n\n$$\nC_{i}^{3} = \\sum_{k,j=1}^{N}A_{ik}A_{kj}A_{ji} \\Bigg/ d_i(d_i - 1),\n$$ {#eq-14-26}\n\nде чисельник позначає кількість закритих трикутників, що містять вершину $i$.\n\nМи можемо розглядати **глобальний коефіцієнт кластеризації**, як середнє арифметичне локального коефіцієнта кластеризації трикутників [@watts1998collective]:\n\n$$\n\\langle C^{3} \\rangle = \\frac{1}{N}\\sum_{i=1}^{N}C_{i}^{3},\n$$ {#eq-14-27}\n\nщо вимірює середню схильність системи до утворення трикутних кластерів.\n\nНа [@fig-triad-clust] видно, що в абсолютних значеннях глобальний коефіцієнт тріадної кластеризації залишається на достатньо високому рівні, що говорить про досить високий ступінь кластеризації трейдерів криптовалютного ринку. Локально, в передкризові періоди, видно, що $\\langle C^{3} \\rangle$ спадає, що говорить про локалізовану руйнацію кластеризованих групувань трейдерів і зростання їх тяжіння до одного або декількох гравців ринку. \n\n##### Транзитивність\n\nУ випадку дуже неоднорідних степенів, тобто безмасштабних мереж, де лише кілька вершин мають високу степінь, а інші --- низьку ($d_i < 2$), вершини з низькою степенню будуть брати участь переважно в обчисленні локального коефіцієнта кластеризації, що може призвести до недооцінки трикутних кластерів у мережі. Баррат і Вайгт [@barrat2000properties] запропонували альтернативний підхід для подолання такої проблеми, який отримав назву **транзитивності** [@BOCCALETTI2006175]:\n\n$$\nT = \\sum_{k,j=1}^{N}A_{ik}A_{kj}A_{ji} \\Bigg/ \\sum_{i,k,j=1}^{N}A_{ik}A_{ji}.\n$$ {#eq-14-28}\n\nУ реальних мережах ми можемо зіткнутися з випадками, коли зв'язані сусіди в мережі можуть утворювати різні кліки (форми кластеризації). Класичний коефіцієнт локальної кластеризації, який вимірює імовірність знаходження трикутників, зазвичай відповідає одностороннім мережам. Однак він не може бути сформований у двосторонніх мережах [@HOLME2004155;@PhysRevE.68.056107]. Складні структури односторонніх, двосторонніх і багатосторонніх мереж реальної системи можуть призвести до утворення кластерів набагато вищого порядку.\n\nПоказник транзитивності працює подібно до $\\langle C^{3} \\rangle$. Однак, на відміну від $\\langle C^{3} \\rangle$, він надає куди більше сигналів про подальшу крахову поведінку на ринку Біткоїна. Видно, що на ринку зберігається досить висока частка трикутних кліків, які стають неповними в передкризові періоди, на що і вказує спадання $T$. \n\n##### Коефіцієнт квадратичної кластеризації\n\nПодібно до $C_{i}^{3}$, який є класичним коефіцієнтом локальної кластеризації, було запропоновано кількісно оцінити коефіцієнт кластеризації $C_{i}^{4}$ [@PhysRevE.72.056127], який відповідає ймовірності знайти \"квадратний\" кластер, утворений сусідами вузла $i$. Тобто, що два сусіди вузла $i$ мають спільного сусіда, відмінного від $i$. Для кожної вершини $i$ вона може бути обчислена як\n\n$$\nC_{i}^{4} = \\frac{\\sum_{k=1}^{d_i}\\sum_{j=k+1}^{d_i}q_i(k, j)}{\\sum_{k=1}^{d_i}\\sum_{j=k+1}^{d_i}[a_{i}(k, j) + q_i(k, j)]},\n$$ {#eq-14-29}\n\nде $q_i(k, j)$ представляє кількість спостережуваних квадратних кластерів; $a_i(k, j) = \\left( d_k - (1+q_{i}(k, j) + \\theta_{ki}) \\right) + \\left( d_{j} - (1 + q_{i}(k, j) + \\theta_{kj}) \\right)$; $\\theta_{kj}=1$ якщо $k$ і $j$ є зв'язними і 0 у зворотньому випадку [@ZHANG20086869]. Схожим чином до [-@eq-14-27] ми можемо визначити **глобальний коефіцієнт квадратичної кластеризації** як \n\n$$\n\\langle C^{4} \\rangle = \\frac{1}{N}\\sum_{i=1}^{N}C_{i}^{4}. \n$$ {#eq-14-30}\n\n\n[@fig-quad-clust] демонструє, що глобально Біткоїн містить куди меншу частку квадратичних кластерів у порівнянні з тріадними. Локально ми спостерігаємо подібну до попередніх показників динаміку: $\\langle С_4 \\rangle$ спадає в передкризовий період і поступово зростає в посткризовий. Можна зробити таке саме припущення, що й до цього: у передкризові періоди трейдери починають поступово ізолюватися від аналітики один одного і спрямовувати свою увагу на дії одного або декількох найбільш впливових груп. Хоча їх кластеризація спадає, але дії залишаються узгодженими згідно тієї інформації, що доходить до них із зовні. \n\n#### Зв'язність \n\nУ математиці **зв'язний граф** --- це граф, у якого кількість ребер наближається до максимально можливої (коли кожна пара вершин з'єднана одним ребром). І навпаки, **розріджений граф** містить лише невелику кількість ребер. Точне визначення того, який граф вважати зв'язним або розрідженим, є неоднозначним. Отже, визначення щільності графа може змінюватись у залежності від контексту задачі.\n\n##### Щільність\n\nЩільність графа може допомогти визначити, наскільки густо заселений різними ребрами представлений граф. Чим вона вища, тим більшою є зв'язність досліджуваного графа. Її можна обчислити як \n\n$$\n\\rho = E \\big/ E_{max}, \n$$ {#eq-14-31}\n\nде $E$ дорівнює кількості ребер у $G$, а $E_{max}=N(N-1)/2$ --- це максимальна кількість ребер у простому ненаправленому графі. \n\nНа рисунку можна бачити, що глобальна зв'язність ринку залишається досить низькою ($\\rho<0.10$), що говорить про недостатньо високий рівень зв'язності між теперішніми та минулими вузлами цінових коливань ринку Біткоїна. Віконна динаміка $\\rho$ вказує на те, що в передкризовий момент часу ступінь щільності зв'язків учасників ринку зростає, що робить граф Біткоїна більш стійким.  \n\n#### Міри відстані\n\nНа основі довжини найкоротшого шляху графа ми можемо отримати безліч інших показників його ефективності або віддаленості його вершин від центру зв’язності досліджуваного графа. \n\n##### Діаметр\n\nЗауважимо, що найкоротший шлях, який є характеристикою відстані між досліджуваними вершинами $i$ та $j$, може бути використаний для характеристики загального розміру мережі. Величина, яка визначає найбільшу відстань між вершиною $i$ та будь-якою іншою вершиною, називається **ексцентриситетом**:\n\n$$\n\\varepsilon(i) = \\max_{j}l_{ij}.\n$$ {#eq-14-32}\n\nРозмір мережі можна охарактеризувати в термінах **діаметру** і визначити як\n\n$$\ndiam = \\max_{i}\\varepsilon(i) = \\max_{i}\\max_{j}l_{ij}.\n$$ {#eq-14-33}\n\n\nНа [@fig-diam] видно, що діаметр графа спадає в передкризовий період, що говорить про зближення верхньої границі графа до його центру. Тобто, інформація, що проходитиме на криптовалютному ринку від одного трейдера до іншого, займатиме набагато менше кроків. Іншими словами, у передкризові періоди трейдери все менше покладаються на посередників із різноманітних новинних ресурсів і більше часу відводять на пряме опрацювання торгівельних закономірностей на ринку. \n\n##### Радіус\n\nТаким чином, діаметр --- це найбільша (максимальна) довжина шляху в мережі. Отже, ми можемо визначити найменший ексцентриситет досліджуваної мережі, який називається **радіусом**:\n\n$$\nrad = \\min_{i}\\varepsilon(i) = \\min_{i}\\max_{j}l_{ij}.\n$$ {#eq-14-34}\n\nОскільки радіус графа це найменший ексцентриситет мережі, а діаметр є найбільшим, можна зробити подібний висновок. Якщо придивитися, то можна помітити, що радіус представляє приблизно в двічі меншу за діаметр версію, але тренд цих обох індикаторів ідентичний. \n\n#### Ефективність\n\nУ галузі мережної науки ефективність мережі в передачі інформації, яку також називають комунікаційною ефективністю, є ключовою метрикою. Це поняття ґрунтується на припущенні, що чим далі один від одного знаходяться два вузли в мережі, тим менш ефективною стає їхня комунікація. Ефективність можна аналізувати як на локальному, так і на глобальному рівнях мережі. На глобальному рівні оцінюється загальний обмін інформацією по всій мережі, де інформаційні потоки протікають паралельно. На локальному рівні вимірюється стійкість мережі до збоїв у менших масштабах. Зокрема, локальна ефективність вузла i відображає, наскільки ефективно його сусіди обмінюються інформацією за його відсутності.\n\n##### Глобальна ефективність\n\nВизначення поведінки в малому світі згідно з [@PhysRevLett.87.198701] можна подати в термінах ефективності $E$ мережі. Ефективність $\\varepsilon_{ij}$ між вершинами $i$ та $j$ визначається як $1/l_{ij}$. Коли $l_{ij}=\\infty$ і, послідовно, якщо $1/l_{ij}=0$, $i$ і $j$ вважаються роз'єднаними. Відповідно до формалізму ефективності, вона може бути кількісно визначена як для глобальних, так і для локальних масштабів $G$. Латора та Марчіорі підкреслювали, що $1/L$ та $C$ можна розглядати як перші наближення **глобальної** ($E_{glob}$) та **локальної ($E_{loc}$) ефективності**.\n\nСередню (глобальну) ефективність $G$ можна визначити як\n\n$$\nE_{glob} = \\sum_{i,j=1}\\left( l_{ij} \\right)^{-1} \\Big/ N(N-1).\n$$ {#eq-14-35}\n\nДля найбільш ефективного графа, де інформація поширюється найбільш ефективно, $E_{glob}$ набуває максимального значення, а в іншому випадку --- мінімального.\n\nНа [@fig-glob-effectiv] видно, що ступінь глобальної ефективності мережі зростає в передкризові періоди, що вказує на зростання ступеня проходження інформації в мережі. З точки зору графа видимості, Біткоїн починає діяти в більш детермінований спосіб, де зв’язність його графа видимості стає близькою до топології ідеального графа, де вся інформація передається в найефективніший спосіб. \n\n##### Локальна ефективність\n\nЛокальна ефективність відіграє роль, подібну до глобального коефіцієнта кластеризації. Локальна ефективність $E_{loc}$ може бути кількісно визначена як\n\n$$\nE_{loc} = \\frac{1}{N}\\sum_{i \\in G_i}E_{glob}(G_i),\n$$ {#eq-14-36}\n\nде $G_i$ --- локальний підграф $G$, а $E_{glob}(G_i)$ характеризує ефективність цього конкретного підграфа. Подібно до глобального коефіцієнта кластеризації, $E_{loc}$ визначає, наскільки відмовостійкою є досліджувана система, тобто наскільки ефективним є транспортування інформації між першими сусідами $i$-го вузла при його видаленні.\n\nГлобально, $E_{loc}\\approx0.85$ для ринку Біткоїна, що вказує на глобальну стійкість криптовалютної мережі до можливих атак і виключень трейдерів ринку з глобальної торгівлі. Віконна процедура показує, що $E_{loc}$ спадає в передкризові періоди, що вказує на спад локальної ефективності мережі. Як уже зазначалося, оскільки увага більшості спрямовується на одного або декількох крупних гравців ринку, їх потенційне відключення з глобальної торгівлі могло б дестабілізувати весь криптовалютний ринок.\n\n#### Найкоротший шлях\n\n##### Середня довжина найкоротшого шляху\n\nЗвертаючи увагу на довжину найкоротшого шляху між двома вершинами $i$ та $j$, ми можемо визначити таку міру, як **середня довжина найкоротшого шляху**:\n\n$$\nApLen = \\sum_{i \\neq j}l_{ij} \\Big/ N(N-1). \n$$ {#eq-14-37}\n\n\nНа [@fig-path-length] продемонстровано, що $ApLen$ характеризується спадом у передкризові періоди та зростанням у кризові й посткризові періоди. Подібно до попередніх індикаторів, що тільки опиралися на довжини найкоротшого шляху між парами вершин, $ApLen$ вказує на зростання ефективності передачі інформації між трейдерами ринку. Також можна сказати, що на побудованому криптовалютному графі видимості минулі значення “бачать” теперішні в більш ефективний спосіб, що відображається в персистентності ринку в передкризовий період. \n\n## Висновок\n\nУ даній роботі було продемонстровано можливість дослідження складних соціально-економічних систем в рамках мережної парадигми складності. Часовий ряд Біткоїна був представлений еквівалентним чином --- мережею видимості, яка має широкий спектр характеристик: і спектральних, і топологічних. Приклади криптовалютних крахів показали, що більшість мережних показників можуть слугувати індикаторами-передвісниками кризових явищ і можуть бути використані для можливого раннього попередження небажаних криз на криптовалютних ринках. \n\n## Завдання для самостійної роботи\n\n1. Для заданих часових рядів чи їх сукупності побудувати всі види мереж, дослідити їх графодинаміку, порівняти результати і зробити висновки щодо їх прогностичних можливостей\n2. Проаналізувати результати як для вихідного ряду, так і для стандартизованих прибутковостей.\n3. Як змінюються результати для не фінансових часових рядів. Чи спостерігається універсальність результатів?\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"number-sections":true,"highlight-style":"arrow","css":["style.css"],"output-file":"lab_14.html"},"language":{"toc-title-document":"Зміст","toc-title-website":"На цій сторінці","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Анотація","section-title-appendices":"Додатки","section-title-footnotes":"Зноски","section-title-references":"Використана література","section-title-reuse":"Повторне використання","section-title-copyright":"Copyright","section-title-citation":"Цитата","appendix-attribution-cite-as":"Будь-ласка, цитуйте цю роботу як:","appendix-attribution-bibtex":"BibTeX:","appendix-view-license":"View License","title-block-author-single":"Автор","title-block-author-plural":"Автори","title-block-affiliation-single":"Приналежність","title-block-affiliation-plural":"Приналежності","title-block-published":"Дата публікації","title-block-modified":"Змінено","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Код","code-tools-menu-caption":"Код","code-tools-show-all-code":"Розгорнути код","code-tools-hide-all-code":"Приховати код","code-tools-view-source":"Переглянути код","code-tools-source-code":"Вихідний код","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Копіювати","copy-button-tooltip-success":"Скопійовано!","repo-action-links-edit":"Редагувати сторінку","repo-action-links-source":"Переглянути код","repo-action-links-issue":"Повідомити про проблему","back-to-top":"Back to top","search-no-results-text":"Пошук не дав результату","search-matching-documents-text":"Результати пошуку","search-copy-link-title":"Скопіюйте посилання для пошуку","search-hide-matches-text":"Приховати додаткові результати","search-more-match-text":"Додатковий результат у цьому документі","search-more-matches-text":"Додаткові результати у цьому документі","search-clear-button-title":"Очистити","search-text-placeholder":"","search-detached-cancel-button-title":"Скасувати","search-submit-button-title":"Надіслати","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Рис.","crossref-tbl-title":"Таблиця","crossref-lst-title":"Список","crossref-thm-title":"Теорема","crossref-lem-title":"Лема","crossref-cor-title":"Наслідок","crossref-prp-title":"Твердження","crossref-cnj-title":"Гіпотеза","crossref-def-title":"Визначення","crossref-exm-title":"Приклад","crossref-exr-title":"Завдання","crossref-ch-prefix":"Глава","crossref-apx-prefix":"Додаток","crossref-sec-prefix":"Розділ","crossref-eq-prefix":"Рівняння","crossref-lof-title":"Список Рисунків","crossref-lot-title":"Список Таблиць","crossref-lol-title":"Список Каталогів","environment-proof-title":"Доведення","environment-remark-title":"Зауваження","environment-solution-title":"Рішення","listing-page-order-by":"Сортувати по","listing-page-order-by-default":"попередньо вибраний","listing-page-order-by-date-asc":"Найновіші","listing-page-order-by-date-desc":"Найстріші","listing-page-order-by-number-desc":"За спаданням","listing-page-order-by-number-asc":"За зростанням","listing-page-field-date":"Дата","listing-page-field-title":"Заголовок","listing-page-field-description":"Опис","listing-page-field-author":"Автор","listing-page-field-filename":"Ім'я файлу","listing-page-field-filemodified":"Змінено","listing-page-field-subtitle":"Підзаголовок","listing-page-field-readingtime":"Час читання","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Категорії","listing-page-minutes-compact":"{0} хвилин","listing-page-category-all":"Все","listing-page-no-matches":"Немає відповідних елементів","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.25","bibliography":["references_main.bib"],"csl":"physical-review-b.csl","callout-appearance":"default","grid":{"body-width":"1050px"},"page-layout":"full","theme":{"light":"cosmo","dark":"superhero"},"title":"Лабораторна робота № 14"},"extensions":{"book":{"multiFile":true}}},"docx":{"identifier":{"display-name":"MS Word","target-format":"docx","base-format":"docx"},"execute":{"fig-width":5,"fig-height":4,"fig-format":"png","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"docx","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"page-width":6.5},"pandoc":{"default-image-extension":"png","to":"docx","toc":true,"number-sections":true,"output-file":"lab_14.docx"},"language":{"toc-title-document":"Зміст","toc-title-website":"На цій сторінці","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Анотація","section-title-appendices":"Додатки","section-title-footnotes":"Зноски","section-title-references":"Використана література","section-title-reuse":"Повторне використання","section-title-copyright":"Copyright","section-title-citation":"Цитата","appendix-attribution-cite-as":"Будь-ласка, цитуйте цю роботу як:","appendix-attribution-bibtex":"BibTeX:","appendix-view-license":"View License","title-block-author-single":"Автор","title-block-author-plural":"Автори","title-block-affiliation-single":"Приналежність","title-block-affiliation-plural":"Приналежності","title-block-published":"Дата публікації","title-block-modified":"Змінено","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Код","code-tools-menu-caption":"Код","code-tools-show-all-code":"Розгорнути код","code-tools-hide-all-code":"Приховати код","code-tools-view-source":"Переглянути код","code-tools-source-code":"Вихідний код","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Копіювати","copy-button-tooltip-success":"Скопійовано!","repo-action-links-edit":"Редагувати сторінку","repo-action-links-source":"Переглянути код","repo-action-links-issue":"Повідомити про проблему","back-to-top":"Back to top","search-no-results-text":"Пошук не дав результату","search-matching-documents-text":"Результати пошуку","search-copy-link-title":"Скопіюйте посилання для пошуку","search-hide-matches-text":"Приховати додаткові результати","search-more-match-text":"Додатковий результат у цьому документі","search-more-matches-text":"Додаткові результати у цьому документі","search-clear-button-title":"Очистити","search-text-placeholder":"","search-detached-cancel-button-title":"Скасувати","search-submit-button-title":"Надіслати","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Рис.","crossref-tbl-title":"Таблиця","crossref-lst-title":"Список","crossref-thm-title":"Теорема","crossref-lem-title":"Лема","crossref-cor-title":"Наслідок","crossref-prp-title":"Твердження","crossref-cnj-title":"Гіпотеза","crossref-def-title":"Визначення","crossref-exm-title":"Приклад","crossref-exr-title":"Завдання","crossref-ch-prefix":"Глава","crossref-apx-prefix":"Додаток","crossref-sec-prefix":"Розділ","crossref-eq-prefix":"Рівняння","crossref-lof-title":"Список Рисунків","crossref-lot-title":"Список Таблиць","crossref-lol-title":"Список Каталогів","environment-proof-title":"Доведення","environment-remark-title":"Зауваження","environment-solution-title":"Рішення","listing-page-order-by":"Сортувати по","listing-page-order-by-default":"попередньо вибраний","listing-page-order-by-date-asc":"Найновіші","listing-page-order-by-date-desc":"Найстріші","listing-page-order-by-number-desc":"За спаданням","listing-page-order-by-number-asc":"За зростанням","listing-page-field-date":"Дата","listing-page-field-title":"Заголовок","listing-page-field-description":"Опис","listing-page-field-author":"Автор","listing-page-field-filename":"Ім'я файлу","listing-page-field-filemodified":"Змінено","listing-page-field-subtitle":"Підзаголовок","listing-page-field-readingtime":"Час читання","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Категорії","listing-page-minutes-compact":"{0} хвилин","listing-page-category-all":"Все","listing-page-no-matches":"Немає відповідних елементів","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"bibliography":["references_main.bib"],"csl":"physical-review-b.csl","callout-appearance":"default","fontsize":14,"title":"Лабораторна робота № 14"},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html","docx"]}